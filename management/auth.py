import logging
from datetime import datetime
from typing import Any, Dict, Optional

from PyQt5.QtCore import Qt, pyqtSignal
from PyQt5.QtGui import QFont
from PyQt5.QtWidgets import (
    QComboBox,
    QDialog,
    QFormLayout,
    QHBoxLayout,
    QLabel,
    QLineEdit,
    QMessageBox,
    QPushButton,
    QScrollArea,
    QStackedWidget,
    QVBoxLayout,
    QWidget,
)

from database.db import SessionLocal
from database.models import User, UserRole

logger = logging.getLogger(__name__)


class AuthWindow(QWidget):
    """–û–∫–Ω–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""

    auth_successful = pyqtSignal(dict)  # –°–∏–≥–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

    def __init__(self):
        super().__init__()
        self.current_user = None
        self.init_ui()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - –ê—É–∫—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞")
        # –î–µ–ª–∞–µ–º –æ–∫–Ω–æ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—ã–º
        self.setMinimumSize(520, 640)
        self.resize(560, 720)
        self.setStyleSheet(
            """
            QWidget {
                background-color: #f8f9fa;
                font-family: 'Segoe UI', Arial;
            }
            QLabel {
                color: #2c3e50;
                font-size: 13px;
            }
            QLineEdit {
                padding: 8px 10px;
                border: 2px solid #e9ecef;
                border-radius: 8px;
                font-size: 13px;
                background-color: white;
            }
            QLineEdit:focus {
                border-color: #007bff;
            }
            QPushButton {
                padding: 10px 12px;
                border: none;
                border-radius: 8px;
                font-size: 14px;
                font-weight: bold;
                color: white;
                background-color: #007bff;
            }
            QPushButton:hover {
                background-color: #0056b3;
            }
            QPushButton:pressed {
                background-color: #004085;
            }
            QComboBox {
                padding: 8px 10px;
                border: 2px solid #e9ecef;
                border-radius: 8px;
                font-size: 13px;
                background-color: white;
            }
        """
        )

        # –°–æ–∑–¥–∞–µ–º —Å—Ç–µ–∫ –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞–º–∏
        self.stacked_widget = QStackedWidget()

        # –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ (–≤ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ)
        self.login_form = self.create_login_form()
        self.stacked_widget.addWidget(self._wrap_scroll(self.login_form))

        # –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–≤ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ)
        self.register_form = self.create_register_form()
        self.stacked_widget.addWidget(self._wrap_scroll(self.register_form))

        # –ì–ª–∞–≤–Ω—ã–π layout
        layout = QVBoxLayout()
        layout.setContentsMargins(16, 16, 16, 16)
        layout.setSpacing(12)
        layout.addWidget(self.stacked_widget)
        self.setLayout(layout)

    def _wrap_scroll(self, inner: QWidget) -> QScrollArea:
        """–û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –≤ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        scroll = QScrollArea()
        scroll.setWidget(inner)
        scroll.setWidgetResizable(True)
        scroll.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        scroll.setFrameShape(QScrollArea.NoFrame)
        return scroll

    def create_login_form(self):
        """–°–æ–∑–¥–∞–µ—Ç —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞"""
        widget = QWidget()
        layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        title.setAlignment(Qt.AlignCenter)
        title.setFont(QFont("Segoe UI", 18, QFont.Bold))
        title.setStyleSheet("color: #2c3e50; margin: 20px;")
        layout.addWidget(title)

        # Username
        self.username_input = QLineEdit()
        self.username_input.setPlaceholderText(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username (–Ω–∞–ø—Ä–∏–º–µ—Ä: @username –∏–ª–∏ username)"
        )
        layout.addWidget(QLabel("Telegram Username:"))
        layout.addWidget(self.username_input)

        # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è Username
        hint_label = QLabel(
            "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username —Å —Å–∏–º–≤–æ–ª–æ–º @ –∏–ª–∏ –±–µ–∑ –Ω–µ–≥–æ"
        )
        hint_label.setStyleSheet("color: #6c757d; font-size: 11px; font-style: italic;")
        hint_label.setWordWrap(True)
        layout.addWidget(hint_label)

        # –†–æ–ª—å
        self.role_combo = QComboBox()
        self.role_combo.setToolTip(
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞. –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –ü—Ä–æ–¥–∞–≤–µ—Ü"
        )
        self.role_combo.addItems(["–ü—Ä–æ–¥–∞–≤–µ—Ü", "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", "–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"])
        self.role_combo.setCurrentIndex(0)
        self.role_combo.setMinimumHeight(36)
        self.role_combo.setSizeAdjustPolicy(QComboBox.AdjustToContents)
        layout.addWidget(QLabel("–†–æ–ª—å:"))
        layout.addWidget(self.role_combo)

        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()

        login_btn = QPushButton("–í–æ–π—Ç–∏")
        login_btn.clicked.connect(self.login)
        buttons_layout.addWidget(login_btn)

        register_btn = QPushButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        register_btn.setStyleSheet("background-color: #28a745;")
        register_btn.clicked.connect(lambda: self.stacked_widget.setCurrentIndex(1))
        buttons_layout.addWidget(register_btn)

        layout.addLayout(buttons_layout)
        layout.addStretch()

        widget.setLayout(layout)
        return widget

    def create_register_form(self):
        """–°–æ–∑–¥–∞–µ—Ç —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        widget = QWidget()
        layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        title.setAlignment(Qt.AlignCenter)
        title.setFont(QFont("Segoe UI", 18, QFont.Bold))
        title.setStyleSheet("color: #2c3e50; margin: 20px;")
        layout.addWidget(title)

        # Username
        self.reg_username_input = QLineEdit()
        self.reg_username_input.setPlaceholderText(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username (–Ω–∞–ø—Ä–∏–º–µ—Ä: @username –∏–ª–∏ username)"
        )
        layout.addWidget(QLabel("Telegram Username:"))
        layout.addWidget(self.reg_username_input)

        # Telegram ID
        self.reg_telegram_id_input = QLineEdit()
        self.reg_telegram_id_input.setPlaceholderText(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)"
        )
        layout.addWidget(QLabel("Telegram ID:"))
        layout.addWidget(self.reg_telegram_id_input)

        # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è Username
        hint_label = QLabel(
            "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username —Å —Å–∏–º–≤–æ–ª–æ–º @ –∏–ª–∏ –±–µ–∑ –Ω–µ–≥–æ"
        )
        hint_label.setStyleSheet("color: #6c757d; font-size: 11px; font-style: italic;")
        hint_label.setWordWrap(True)
        layout.addWidget(hint_label)

        # –ò–º—è
        self.name_input = QLineEdit()
        self.name_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è")
        layout.addWidget(QLabel("–ò–º—è:"))
        layout.addWidget(self.name_input)

        # –§–∞–º–∏–ª–∏—è
        self.lastname_input = QLineEdit()
        self.lastname_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é")
        layout.addWidget(QLabel("–§–∞–º–∏–ª–∏—è:"))
        layout.addWidget(self.lastname_input)

        # –¢–µ–ª–µ—Ñ–æ–Ω
        self.phone_input = QLineEdit()
        self.phone_input.setPlaceholderText("+7 (999) 123-45-67")
        layout.addWidget(QLabel("–¢–µ–ª–µ—Ñ–æ–Ω:"))
        layout.addWidget(self.phone_input)

        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()

        register_btn = QPushButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
        register_btn.clicked.connect(self.register)
        buttons_layout.addWidget(register_btn)

        back_btn = QPushButton("–ù–∞–∑–∞–¥")
        back_btn.setStyleSheet("background-color: #6c757d;")
        back_btn.clicked.connect(lambda: self.stacked_widget.setCurrentIndex(0))
        buttons_layout.addWidget(back_btn)

        layout.addLayout(buttons_layout)
        layout.addStretch()

        widget.setLayout(layout)
        return widget

    def login(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É"""
        username_text = self.username_input.text().strip()
        role_text = self.role_combo.currentText()

        if not username_text:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ Telegram username")
            return

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º username (—É–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å)
        username = username_text.lstrip("@")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
        role_map = {
            "–ü—Ä–æ–¥–∞–≤–µ—Ü": UserRole.SELLER,
            "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä": UserRole.MODERATOR,
            "–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä": UserRole.SUPER_ADMIN,
        }
        role = role_map.get(role_text, UserRole.SELLER)

        db = SessionLocal()
        try:
            # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
            user = db.query(User).filter(User.username == username).first()

            if user:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                if user.is_banned:
                    QMessageBox.critical(
                        self,
                        "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n"
                        f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.",
                    )
                    return

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–ª—å
                if user.role == role:
                    self.current_user = {
                        "id": user.id,
                        "telegram_id": user.telegram_id,
                        "username": user.username,
                        "name": f"{user.first_name} {user.last_name or ''}".strip(),
                        "role": user.role.value,
                        "balance": user.balance,
                    }
                    self.auth_successful.emit(self.current_user)
                    self.close()
                else:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    role_names = {
                        UserRole.SELLER: "–ü—Ä–æ–¥–∞–≤–µ—Ü-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                        UserRole.MODERATOR: "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                        UserRole.SUPER_ADMIN: "–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                    }
                    actual_role = role_names.get(user.role, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                    QMessageBox.warning(
                        self,
                        "–û—à–∏–±–∫–∞ —Ä–æ–ª–∏",
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram username @{username} –Ω–∞–π–¥–µ–Ω, –Ω–æ –µ–≥–æ —Ä–æ–ª—å: {actual_role}\n"
                        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞.",
                    )
            else:
                QMessageBox.warning(
                    self,
                    "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram username @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.",
                )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: {e}")
        finally:
            db.close()

    def register(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        username_text = self.reg_username_input.text().strip()
        telegram_id_text = self.reg_telegram_id_input.text().strip()
        name = self.name_input.text().strip()
        lastname = self.lastname_input.text().strip()
        phone = self.phone_input.text().strip()

        if not all([username_text, telegram_id_text, name]):
            QMessageBox.warning(
                self,
                "–û—à–∏–±–∫–∞",
                "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (Telegram Username, Telegram ID –∏ –∏–º—è)",
            )
            return

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º username (—É–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å)
        username = username_text.lstrip("@")

        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º Telegram ID
        if not telegram_id_text.isdigit():
            QMessageBox.warning(
                self, "–û—à–∏–±–∫–∞", "Telegram ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã"
            )
            return
        telegram_id = int(telegram_id_text)
        if telegram_id <= 0:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Telegram ID")
            return

        db = SessionLocal()
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            existing_user = db.query(User).filter(User.username == username).first()
            if existing_user:
                if existing_user.is_banned:
                    QMessageBox.critical(
                        self,
                        "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram username @{username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n"
                        f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å —ç—Ç–∏–º username –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.",
                    )
                else:
                    QMessageBox.warning(
                        self,
                        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram username @{username} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.",
                    )
                return

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–¥–∞–≤–µ—Ü-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
            new_user = User(
                telegram_id=telegram_id,
                username=username,
                first_name=name,
                last_name=lastname,
                phone=phone,
                role=UserRole.SELLER,
                balance=0.0,
            )

            db.add(new_user)
            db.commit()

            QMessageBox.information(
                self,
                "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞",
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n\n"
                f"üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:\n"
                f"‚Ä¢ Telegram Username: @{username}\n"
                f"‚Ä¢ –†–æ–ª—å: –ü—Ä–æ–¥–∞–≤–µ—Ü-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.",
            )

            # –û—á–∏—â–∞–µ–º –ø–æ–ª—è –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
            self.reg_username_input.clear()
            self.reg_telegram_id_input.clear()
            self.name_input.clear()
            self.lastname_input.clear()
            self.phone_input.clear()
            self.stacked_widget.setCurrentIndex(0)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        finally:
            db.close()
