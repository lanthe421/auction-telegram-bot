"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
"""

import logging
from datetime import datetime, timedelta
from typing import Optional

import pytz

logger = logging.getLogger(__name__)

# –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
MOSCOW_TZ = pytz.timezone("Europe/Moscow")

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è
AUTO_EXTENSION_MINUTES = 10  # –ù–∞ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å
LAST_MINUTE_THRESHOLD = 1  # –ó–∞ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ –∫–æ–Ω—Ü–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ


def get_moscow_time() -> datetime:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ"""
    return datetime.now(MOSCOW_TZ)


def utc_to_moscow(utc_time: datetime) -> datetime:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç UTC –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ"""
    if utc_time.tzinfo is None:
        utc_time = utc_time.replace(tzinfo=pytz.UTC)
    return utc_time.astimezone(MOSCOW_TZ)


def moscow_to_utc(moscow_time: datetime) -> datetime:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –≤ UTC"""
    if moscow_time.tzinfo is None:
        moscow_time = moscow_time.replace(tzinfo=MOSCOW_TZ)
    return moscow_time.astimezone(pytz.UTC)


def format_moscow_time(dt: datetime, format_str: str = "%d.%m.%Y %H:%M") -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ"""
    moscow_dt = utc_to_moscow(dt) if dt.tzinfo else dt.replace(tzinfo=MOSCOW_TZ)
    return moscow_dt.strftime(format_str)


def is_lot_ended(lot_end_time: datetime) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ª–∏ –ª–æ—Ç"""
    if not lot_end_time:
        return False

    # Ensure both times are timezone-aware
    now = get_moscow_time()
    if lot_end_time.tzinfo is None:
        lot_end_time = lot_end_time.replace(tzinfo=pytz.UTC)

    return lot_end_time <= now


def get_time_until_end(lot_end_time: datetime) -> Optional[timedelta]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ª–æ—Ç–∞"""
    if not lot_end_time:
        return None

    # Ensure both times are timezone-aware
    now = get_moscow_time()
    if lot_end_time.tzinfo is None:
        lot_end_time = lot_end_time.replace(tzinfo=pytz.UTC)

    return lot_end_time - now


def should_extend_auction(lot_end_time: datetime) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å –∞—É–∫—Ü–∏–æ–Ω.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∞—É–∫—Ü–∏–æ–Ω–∞ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ LAST_MINUTE_THRESHOLD –º–∏–Ω—É—Ç.
    """
    if not lot_end_time:
        return False

    # Ensure both times are timezone-aware
    now = get_moscow_time()
    if lot_end_time.tzinfo is None:
        lot_end_time = lot_end_time.replace(tzinfo=pytz.UTC)

    time_left = lot_end_time - now

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—É–∫—Ü–∏–æ–Ω –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    return time_left.total_seconds() > 0 and time_left.total_seconds() <= (
        LAST_MINUTE_THRESHOLD * 60
    )


def extend_auction_end_time(lot_end_time: datetime) -> datetime:
    """
    –ü—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞ –Ω–∞ AUTO_EXTENSION_MINUTES –º–∏–Ω—É—Ç.
    """
    if not lot_end_time:
        return lot_end_time

    new_end_time = lot_end_time + timedelta(minutes=AUTO_EXTENSION_MINUTES)
    logger.info(
        f"–ê—É–∫—Ü–∏–æ–Ω –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ {AUTO_EXTENSION_MINUTES} –º–∏–Ω—É—Ç. –ù–æ–≤–æ–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {new_end_time}"
    )
    return new_end_time


def get_extension_message(old_end_time: datetime, new_end_time: datetime) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –∞—É–∫—Ü–∏–æ–Ω–∞.
    """
    old_time_str = format_moscow_time(old_end_time, "%H:%M")
    new_time_str = format_moscow_time(new_end_time, "%H:%M")

    return f"""
‚è∞ <b>–ê—É–∫—Ü–∏–æ–Ω –ø—Ä–æ–¥–ª–µ–Ω!</b>

üîÑ –ò–∑-–∑–∞ —Å—Ç–∞–≤–∫–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É –∞—É–∫—Ü–∏–æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω –Ω–∞ {AUTO_EXTENSION_MINUTES} –º–∏–Ω—É—Ç.

üìÖ –ù–æ–≤–æ–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: {new_time_str} (–±—ã–ª–æ {old_time_str})

üéØ –£—Å–ø–µ–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞–≤–∫—É!
    """.strip()
